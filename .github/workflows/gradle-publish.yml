# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Build Jar 
      run: | 
        ./gradlew build 
        mkdir -p ${{ github.workspace }}/artifacts 
        mv target/*.jar ${{ github.workspace }}/artifacts/ 

    - name: Set version as environment variable 
      run: | 
        RELEASE_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}') 
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV 
        
    - name: Use Version Number 
      run: | 
        echo "Version number is ${{ env.RELEASE_VERSION }}" 

    - uses: "marvinpinto/action-automatic-releases@latest"  
      with:  
        repo_token: "${{ secrets.GITHUB_TOKEN }}"  
        automatic_release_tag: "${{ env.RELEASE_VERSION }}"  
        prerelease: false  
        title: "Release ${{ env.RELEASE_VERSION }}"  
        files: |  
          ${{ github.workspace }}/artifacts/*.jar 
    - name: DONE!!! 
      run: echo "done"
